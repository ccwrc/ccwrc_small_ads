<?php

namespace SmallAdsBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AdRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdRepository extends EntityRepository {

    public function findOneActiveAdById($id) {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT a FROM SmallAdsBundle:Ad a WHERE CURRENT_TIMESTAMP()'
                        . ' < a.endDate AND a.id = :id')->setParameter('id', $id);
        return $query->setMaxResults(1)->getOneOrNullResult();
    }

    public function findOneArchivAdById($id) {
        $em = $this->getEntityManager();
        $queryArchiv = $em->createQuery('SELECT a FROM SmallAdsBundle:Ad a WHERE CURRENT_TIMESTAMP()'
                        . ' > a.endDate AND a.id = :id')->setParameter('id', $id);
        return $queryArchiv->setMaxResults(1)->getOneOrNullResult();
    }

    public function findAllActiveAds() {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT a FROM SmallAdsBundle:Ad a WHERE CURRENT_TIMESTAMP()'
                . ' < a.endDate ORDER BY a.endDate DESC');
        return $query->getResult();
    }
    
    public function findAllActiveAdsByCategory($id) {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT a FROM SmallAdsBundle:Ad a WHERE CURRENT_TIMESTAMP()'
                        . ' < a.endDate AND a.category = :id ORDER BY a.endDate '
                        . 'DESC')->setParameter('id', $id);
        return $query->getResult();
    }

    public function findAllArchiveAds() {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT a FROM SmallAdsBundle:Ad a WHERE CURRENT_TIMESTAMP()'
                . ' > a.endDate ORDER BY a.endDate DESC');
        return $query->getResult();
    }

}
